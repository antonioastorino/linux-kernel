; nasm -fbin boot-sec-simple.ams -o boot-sec-simple.bin && qemu-system-x86_64 -drive format=raw,file=boot-sec-simple.bin

ORG 0
BITS 16

HEX_DIGITS equ 4 ; number of hex digits (half bytes) of numbers for printing

; Implement minimum BPB (BIOS Parameter Block)
_start:
    jmp short start
    nop
times 33 db 0                   ; fill in with dummy BPB values

start:
    jmp 0x7c0:step2             ; set code segment

step2:
    cli                         ; Clear and disable interrupts
    mov     ax, 0x7c0
    mov     ds, ax              ; set the data segment to the value in ax
    mov     es, ax              ; set the extra segment to the value in ax
    mov     ax, 0x00
    mov     ss, ax
    mov     sp, 0x7c00
    sti                         ; Enable interrupts
    mov     si, hello_string    ; move the address of the label to si 
    call    print_s
    call    print_s

    mov     si, goodbye_string  ; move the address of the label to si
    call    print_s
    call    print_s

    mov     bx, 0xab12         ; this number will be printed
    call    print_h

    jmp $                       ; infinite loop

; -------------------------------------------------------------------------

%include "print.ams"

hello_string:
    db "Hello, world!", 10, 0

goodbye_string:
    db "Goodbye, world!", 10, 0

; padding and magic number
times 510 - ($-$$) db 0
dw 0xaa55
